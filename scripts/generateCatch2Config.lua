
function generate_catch_config()
      print("Generating Catch2 configuration header...")

      -- Open a file to write the config header
      local file = io.open("PoseidonTest/src/thirdParty/Catch2/src/catch2/catch_user_config.hpp", "w")
      
      -- Write the license and prelude
      file:write([[
/*
//              Copyright Catch2 Authors
// Distributed under the Boost Software License, Version 1.0.
//   (See accompanying file LICENSE.txt or copy at
//        https://www.boost.org/LICENSE_1_0.txt)

// SPDX-License-Identifier: BSL-1.0

/**\file
 * **AUTOGENERATED BY PREMAKE ACTION**
 *
 * Contains materialized compile-time configuration provided by Premake.
 */


#ifndef CATCH_USER_CONFIG_HPP_INCLUDED
#define CATCH_USER_CONFIG_HPP_INCLUDED

]])

      -- Write the actual configuration defines
      local defines = {
         { "CATCH_CONFIG_COLOUR_WIN32", _OPTIONS["colour_win32"] },
         { "CATCH_CONFIG_NO_COLOUR_WIN32", _OPTIONS["no_colour_win32"] },
         { "CATCH_CONFIG_COUNTER", _OPTIONS["counter"] },
         { "CATCH_CONFIG_NO_COUNTER", _OPTIONS["no_counter"] },
         { "CATCH_CONFIG_CPP11_TO_STRING", _OPTIONS["cpp11_to_string"] },
         { "CATCH_CONFIG_NO_CPP11_TO_STRING", _OPTIONS["no_cpp11_to_string"] },
         { "CATCH_CONFIG_CPP17_OPTIONAL", _OPTIONS["cpp17_optional"] },
         { "CATCH_CONFIG_NO_CPP17_OPTIONAL", _OPTIONS["no_cpp17_optional"] },
         -- Add more options as necessary
      }

      -- Loop through the defines and write them out
      for _, def in ipairs(defines) do
         if def[2] then
            file:write("#define " .. def[1] .. "\n")
         else
            file:write("// #define " .. def[1] .. "\n")
         end
      end

      -- Close the header guard
      file:write([[
#endif // CATCH_USER_CONFIG_HPP_INCLUDED
]])

      -- Close the file
      file:close()

      print("Configuration header generated at PoseidonTest/src/thirdParty/Catch2/src/catch2/catch_user_config.hpp")
   end

-- premake.lua
newaction {
   trigger = "generate-catch-config",
   description = "Generate Catch2 configuration header",
   
   -- Function that gets executed when this action is triggered
   execute = generate_catch_config()
}
-- Add an option to skip the generation of the Catch2 config
newoption {
   trigger = "skip-catch-config",
   description = "Skip the generation of Catch2 configuration header"
}
-- Example of configuring additional options to control the flags
newoption {
   trigger = "colour_win32",
   description = "Enable Win32 colour support"
}

newoption {
   trigger = "no_colour_win32",
   description = "Disable Win32 colour support"
}

newoption {
   trigger = "cpp11_to_string",
   description = "Enable CPP11 to_string support"
}

newoption {
   trigger = "no_cpp11_to_string",
   description = "Disable CPP11 to_string support"
}

newoption {
   trigger = "cpp17_optional",
   description = "Enable CPP17 optional support"
}

newoption {
   trigger = "no_cpp17_optional",
   description = "Disable CPP17 optional support"
}
